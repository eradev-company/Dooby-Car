version: '2.3'

services:
    # tensorflow:
    #     build:
    #         context: ../
    #         dockerfile: server-node/ai.Dockerfile
    #     restart: always
    #     depends_on:
    #         - husarnet
    #     volumes:
    #         - ../notebooks:/app/notebooks
    #     network_mode: service:husarnet

    # apipy:
    #     image: python:3.9
    #     restart: always
    #     depends_on:
    #         - nav2
    #     volumes:
    #         - ../api/python:/app/
    #     command: bash -c "cd /app && pip install -r requirements.txt && python3 connection.py"
    #     network_mode: service:husarnet

    # bridge:
    #     build:
    #         context: ../
    #         dockerfile: server-node/web.Dockerfile
    #     restart: always
    #     depends_on: 
    #         - husarnet
    #     network_mode: service:husarnet  # This is the most important line in this setup. This will put the Husarnet Client in the same network namespace as your app 

    nav2:
        build:
            context: ../
            dockerfile: server-node/Dockerfile
        restart: always
        volumes:
            - ./config:/config
        depends_on: 
            - husarnet
        network_mode: service:husarnet  # This is the most important line in this setup. This will put the Husarnet Client in the same network namespace as your app 
        # network_mode : host  # for local network

    husarnet:
        image: husarnet/husarnet
        restart: unless-stopped
        volumes:
            - /var/lib/husarnet  # This will persist your Husarnet Client keys, thus IP of the container will be stable/the same between (re)boots
        sysctls:
            - net.ipv6.conf.all.disable_ipv6=0  # Husarnet is using IPv6 for the internal connections
        cap_add:
            - NET_ADMIN
        devices:
            - /dev/net/tun
        # uncomment these line to expose ros-bridge
        # ports:
        #   - "9090:9090"
        environment:
            - HOSTNAME=server-node
        env_file: 
            - ../.env  # create .env file in the same folder as Dockerfile and specify HOSTNAME and JOINCODE there
